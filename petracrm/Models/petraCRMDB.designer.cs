#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace petracrm.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Petra_CRM")]
	public partial class petraCRMDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertcorrespondence(correspondence instance);
    partial void Updatecorrespondence(correspondence instance);
    partial void Deletecorrespondence(correspondence instance);
    partial void Insertsla_timer(sla_timer instance);
    partial void Updatesla_timer(sla_timer instance);
    partial void Deletesla_timer(sla_timer instance);
    partial void Insertsub_correspondence(sub_correspondence instance);
    partial void Updatesub_correspondence(sub_correspondence instance);
    partial void Deletesub_correspondence(sub_correspondence instance);
    partial void Insertticket_statuse(ticket_statuse instance);
    partial void Updateticket_statuse(ticket_statuse instance);
    partial void Deleteticket_statuse(ticket_statuse instance);
    partial void Insertticket(ticket instance);
    partial void Updateticket(ticket instance);
    partial void Deleteticket(ticket instance);
    partial void Insertticket_comment(ticket_comment instance);
    partial void Updateticket_comment(ticket_comment instance);
    partial void Deleteticket_comment(ticket_comment instance);
    #endregion
		
		public petraCRMDBDataContext() : 
				base(global::petracrm.Properties.Settings.Default.Petra_CRMConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public petraCRMDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public petraCRMDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public petraCRMDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public petraCRMDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<correspondence> correspondences
		{
			get
			{
				return this.GetTable<correspondence>();
			}
		}
		
		public System.Data.Linq.Table<sla_timer> sla_timers
		{
			get
			{
				return this.GetTable<sla_timer>();
			}
		}
		
		public System.Data.Linq.Table<sub_correspondence> sub_correspondences
		{
			get
			{
				return this.GetTable<sub_correspondence>();
			}
		}
		
		public System.Data.Linq.Table<ticket_statuse> ticket_statuses
		{
			get
			{
				return this.GetTable<ticket_statuse>();
			}
		}
		
		public System.Data.Linq.Table<ticket> tickets
		{
			get
			{
				return this.GetTable<ticket>();
			}
		}
		
		public System.Data.Linq.Table<ticket_comment> ticket_comments
		{
			get
			{
				return this.GetTable<ticket_comment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categories")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _category_name;
		
		private string _description;
		
		private int _owner;
		
		private System.DateTime _created_at;
		
		private System.Nullable<int> _modified_by;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private EntityRef<category> _category2;
		
		private EntitySet<ticket> _tickets;
		
		private EntityRef<category> _category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnownerChanging(int value);
    partial void OnownerChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onmodified_byChanging(System.Nullable<int> value);
    partial void Onmodified_byChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
		
		public category()
		{
			this._category2 = default(EntityRef<category>);
			this._tickets = new EntitySet<ticket>(new Action<ticket>(this.attach_tickets), new Action<ticket>(this.detach_tickets));
			this._category1 = default(EntityRef<category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int NOT NULL")]
		public int owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime2 NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="Int")]
		public System.Nullable<int> modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime2")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_category", Storage="_category2", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public category category2
		{
			get
			{
				return this._category2.Entity;
			}
			set
			{
				category previousValue = this._category2.Entity;
				if (((previousValue != value) 
							|| (this._category2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category2.Entity = null;
						previousValue.category1 = null;
					}
					this._category2.Entity = value;
					if ((value != null))
					{
						value.category1 = this;
					}
					this.SendPropertyChanged("category2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_ticket", Storage="_tickets", ThisKey="id", OtherKey="category_id")]
		public EntitySet<ticket> tickets
		{
			get
			{
				return this._tickets;
			}
			set
			{
				this._tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_category", Storage="_category1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public category category1
		{
			get
			{
				return this._category1.Entity;
			}
			set
			{
				category previousValue = this._category1.Entity;
				if (((previousValue != value) 
							|| (this._category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category1.Entity = null;
						previousValue.category2 = null;
					}
					this._category1.Entity = value;
					if ((value != null))
					{
						value.category2 = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tickets(ticket entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_tickets(ticket entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.correspondence")]
	public partial class correspondence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _correspondence_name;
		
		private int _category_id;
		
		private string _description;
		
		private int _owner;
		
		private System.DateTime _created_at;
		
		private System.Nullable<int> _modified_by;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private EntityRef<correspondence> _correspondence2;
		
		private EntitySet<sub_correspondence> _sub_correspondences;
		
		private EntitySet<ticket> _tickets;
		
		private EntityRef<correspondence> _correspondence1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Oncorrespondence_nameChanging(string value);
    partial void Oncorrespondence_nameChanged();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnownerChanging(int value);
    partial void OnownerChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onmodified_byChanging(System.Nullable<int> value);
    partial void Onmodified_byChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
		
		public correspondence()
		{
			this._correspondence2 = default(EntityRef<correspondence>);
			this._sub_correspondences = new EntitySet<sub_correspondence>(new Action<sub_correspondence>(this.attach_sub_correspondences), new Action<sub_correspondence>(this.detach_sub_correspondences));
			this._tickets = new EntitySet<ticket>(new Action<ticket>(this.attach_tickets), new Action<ticket>(this.detach_tickets));
			this._correspondence1 = default(EntityRef<correspondence>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._correspondence1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correspondence_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string correspondence_name
		{
			get
			{
				return this._correspondence_name;
			}
			set
			{
				if ((this._correspondence_name != value))
				{
					this.Oncorrespondence_nameChanging(value);
					this.SendPropertyChanging();
					this._correspondence_name = value;
					this.SendPropertyChanged("correspondence_name");
					this.Oncorrespondence_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int NOT NULL")]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int NOT NULL")]
		public int owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="Date NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="Int")]
		public System.Nullable<int> modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="Date")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="correspondence_correspondence", Storage="_correspondence2", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public correspondence correspondence2
		{
			get
			{
				return this._correspondence2.Entity;
			}
			set
			{
				correspondence previousValue = this._correspondence2.Entity;
				if (((previousValue != value) 
							|| (this._correspondence2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._correspondence2.Entity = null;
						previousValue.correspondence1 = null;
					}
					this._correspondence2.Entity = value;
					if ((value != null))
					{
						value.correspondence1 = this;
					}
					this.SendPropertyChanged("correspondence2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="correspondence_sub_correspondence", Storage="_sub_correspondences", ThisKey="id", OtherKey="correspondence_id")]
		public EntitySet<sub_correspondence> sub_correspondences
		{
			get
			{
				return this._sub_correspondences;
			}
			set
			{
				this._sub_correspondences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="correspondence_ticket", Storage="_tickets", ThisKey="id", OtherKey="correspondence_id")]
		public EntitySet<ticket> tickets
		{
			get
			{
				return this._tickets;
			}
			set
			{
				this._tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="correspondence_correspondence", Storage="_correspondence1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public correspondence correspondence1
		{
			get
			{
				return this._correspondence1.Entity;
			}
			set
			{
				correspondence previousValue = this._correspondence1.Entity;
				if (((previousValue != value) 
							|| (this._correspondence1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._correspondence1.Entity = null;
						previousValue.correspondence2 = null;
					}
					this._correspondence1.Entity = value;
					if ((value != null))
					{
						value.correspondence2 = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("correspondence1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sub_correspondences(sub_correspondence entity)
		{
			this.SendPropertyChanging();
			entity.correspondence = this;
		}
		
		private void detach_sub_correspondences(sub_correspondence entity)
		{
			this.SendPropertyChanging();
			entity.correspondence = null;
		}
		
		private void attach_tickets(ticket entity)
		{
			this.SendPropertyChanging();
			entity.correspondence = this;
		}
		
		private void detach_tickets(ticket entity)
		{
			this.SendPropertyChanging();
			entity.correspondence = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sla_timers")]
	public partial class sla_timer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _code;
		
		private string _sla_name;
		
		private int _pre_escalate;
		
		private int _escalate;
		
		private System.Nullable<int> _owner;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private System.Nullable<int> _modified_by;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private EntitySet<sub_correspondence> _sub_correspondences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Onsla_nameChanging(string value);
    partial void Onsla_nameChanged();
    partial void Onpre_escalateChanging(int value);
    partial void Onpre_escalateChanged();
    partial void OnescalateChanging(int value);
    partial void OnescalateChanged();
    partial void OnownerChanging(System.Nullable<int> value);
    partial void OnownerChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void Onmodified_byChanging(System.Nullable<int> value);
    partial void Onmodified_byChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
		
		public sla_timer()
		{
			this._sub_correspondences = new EntitySet<sub_correspondence>(new Action<sub_correspondence>(this.attach_sub_correspondences), new Action<sub_correspondence>(this.detach_sub_correspondences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sla_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sla_name
		{
			get
			{
				return this._sla_name;
			}
			set
			{
				if ((this._sla_name != value))
				{
					this.Onsla_nameChanging(value);
					this.SendPropertyChanging();
					this._sla_name = value;
					this.SendPropertyChanged("sla_name");
					this.Onsla_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pre_escalate", DbType="Int NOT NULL")]
		public int pre_escalate
		{
			get
			{
				return this._pre_escalate;
			}
			set
			{
				if ((this._pre_escalate != value))
				{
					this.Onpre_escalateChanging(value);
					this.SendPropertyChanging();
					this._pre_escalate = value;
					this.SendPropertyChanged("pre_escalate");
					this.Onpre_escalateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_escalate", DbType="Int NOT NULL")]
		public int escalate
		{
			get
			{
				return this._escalate;
			}
			set
			{
				if ((this._escalate != value))
				{
					this.OnescalateChanging(value);
					this.SendPropertyChanging();
					this._escalate = value;
					this.SendPropertyChanged("escalate");
					this.OnescalateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int")]
		public System.Nullable<int> owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="Date")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="Int")]
		public System.Nullable<int> modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="Date")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sla_timer_sub_correspondence", Storage="_sub_correspondences", ThisKey="ID", OtherKey="sla_id")]
		public EntitySet<sub_correspondence> sub_correspondences
		{
			get
			{
				return this._sub_correspondences;
			}
			set
			{
				this._sub_correspondences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sub_correspondences(sub_correspondence entity)
		{
			this.SendPropertyChanging();
			entity.sla_timer = this;
		}
		
		private void detach_sub_correspondences(sub_correspondence entity)
		{
			this.SendPropertyChanging();
			entity.sla_timer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sub_correspondence")]
	public partial class sub_correspondence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private int _correspondence_id;
		
		private int _sla_id;
		
		private string _sub_correspondence_name;
		
		private string _description;
		
		private int _owner;
		
		private System.DateTime _created_at;
		
		private System.Nullable<int> _modified_by;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private EntityRef<correspondence> _correspondence;
		
		private EntityRef<sla_timer> _sla_timer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Oncorrespondence_idChanging(int value);
    partial void Oncorrespondence_idChanged();
    partial void Onsla_idChanging(int value);
    partial void Onsla_idChanged();
    partial void Onsub_correspondence_nameChanging(string value);
    partial void Onsub_correspondence_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnownerChanging(int value);
    partial void OnownerChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onmodified_byChanging(System.Nullable<int> value);
    partial void Onmodified_byChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
		
		public sub_correspondence()
		{
			this._correspondence = default(EntityRef<correspondence>);
			this._sla_timer = default(EntityRef<sla_timer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correspondence_id", DbType="Int NOT NULL")]
		public int correspondence_id
		{
			get
			{
				return this._correspondence_id;
			}
			set
			{
				if ((this._correspondence_id != value))
				{
					if (this._correspondence.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncorrespondence_idChanging(value);
					this.SendPropertyChanging();
					this._correspondence_id = value;
					this.SendPropertyChanged("correspondence_id");
					this.Oncorrespondence_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sla_id", DbType="Int NOT NULL")]
		public int sla_id
		{
			get
			{
				return this._sla_id;
			}
			set
			{
				if ((this._sla_id != value))
				{
					if (this._sla_timer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsla_idChanging(value);
					this.SendPropertyChanging();
					this._sla_id = value;
					this.SendPropertyChanged("sla_id");
					this.Onsla_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_correspondence_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sub_correspondence_name
		{
			get
			{
				return this._sub_correspondence_name;
			}
			set
			{
				if ((this._sub_correspondence_name != value))
				{
					this.Onsub_correspondence_nameChanging(value);
					this.SendPropertyChanging();
					this._sub_correspondence_name = value;
					this.SendPropertyChanged("sub_correspondence_name");
					this.Onsub_correspondence_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int NOT NULL")]
		public int owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="Date NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="Int")]
		public System.Nullable<int> modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="Date")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="correspondence_sub_correspondence", Storage="_correspondence", ThisKey="correspondence_id", OtherKey="id", IsForeignKey=true)]
		public correspondence correspondence
		{
			get
			{
				return this._correspondence.Entity;
			}
			set
			{
				correspondence previousValue = this._correspondence.Entity;
				if (((previousValue != value) 
							|| (this._correspondence.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._correspondence.Entity = null;
						previousValue.sub_correspondences.Remove(this);
					}
					this._correspondence.Entity = value;
					if ((value != null))
					{
						value.sub_correspondences.Add(this);
						this._correspondence_id = value.id;
					}
					else
					{
						this._correspondence_id = default(int);
					}
					this.SendPropertyChanged("correspondence");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sla_timer_sub_correspondence", Storage="_sla_timer", ThisKey="sla_id", OtherKey="ID", IsForeignKey=true)]
		public sla_timer sla_timer
		{
			get
			{
				return this._sla_timer.Entity;
			}
			set
			{
				sla_timer previousValue = this._sla_timer.Entity;
				if (((previousValue != value) 
							|| (this._sla_timer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sla_timer.Entity = null;
						previousValue.sub_correspondences.Remove(this);
					}
					this._sla_timer.Entity = value;
					if ((value != null))
					{
						value.sub_correspondences.Add(this);
						this._sla_id = value.ID;
					}
					else
					{
						this._sla_id = default(int);
					}
					this.SendPropertyChanged("sla_timer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ticket_statuses")]
	public partial class ticket_statuse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _status_desc;
		
		private EntitySet<ticket> _tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstatus_descChanging(string value);
    partial void Onstatus_descChanged();
    #endregion
		
		public ticket_statuse()
		{
			this._tickets = new EntitySet<ticket>(new Action<ticket>(this.attach_tickets), new Action<ticket>(this.detach_tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_desc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status_desc
		{
			get
			{
				return this._status_desc;
			}
			set
			{
				if ((this._status_desc != value))
				{
					this.Onstatus_descChanging(value);
					this.SendPropertyChanging();
					this._status_desc = value;
					this.SendPropertyChanged("status_desc");
					this.Onstatus_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ticket_statuse_ticket", Storage="_tickets", ThisKey="id", OtherKey="status")]
		public EntitySet<ticket> tickets
		{
			get
			{
				return this._tickets;
			}
			set
			{
				this._tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tickets(ticket entity)
		{
			this.SendPropertyChanging();
			entity.ticket_statuse = this;
		}
		
		private void detach_tickets(ticket entity)
		{
			this.SendPropertyChanging();
			entity.ticket_statuse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tickets")]
	public partial class ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ticket_id;
		
		private string _customer_id;
		
		private int _customer_id_type;
		
		private int _ticket_priority;
		
		private string _subject;
		
		private int _category_id;
		
		private int _correspondence_id;
		
		private int _sub_correspondence_id;
		
		private string _notes;
		
		private System.Nullable<int> _assigned_to;
		
		private System.DateTime _date_time_created;
		
		private int _ticket_month;
		
		private int _ticket_year;
		
		private int _status;
		
		private int _owner;
		
		private System.DateTime _created_at;
		
		private System.Nullable<int> _modified_by;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private EntityRef<category> _category;
		
		private EntityRef<correspondence> _correspondence;
		
		private EntityRef<ticket_statuse> _ticket_statuse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onticket_idChanging(string value);
    partial void Onticket_idChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_id_typeChanging(int value);
    partial void Oncustomer_id_typeChanged();
    partial void Onticket_priorityChanging(int value);
    partial void Onticket_priorityChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Oncorrespondence_idChanging(int value);
    partial void Oncorrespondence_idChanged();
    partial void Onsub_correspondence_idChanging(int value);
    partial void Onsub_correspondence_idChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Onassigned_toChanging(System.Nullable<int> value);
    partial void Onassigned_toChanged();
    partial void Ondate_time_createdChanging(System.DateTime value);
    partial void Ondate_time_createdChanged();
    partial void Onticket_monthChanging(int value);
    partial void Onticket_monthChanged();
    partial void Onticket_yearChanging(int value);
    partial void Onticket_yearChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnownerChanging(int value);
    partial void OnownerChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onmodified_byChanging(System.Nullable<int> value);
    partial void Onmodified_byChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
		
		public ticket()
		{
			this._category = default(EntityRef<category>);
			this._correspondence = default(EntityRef<correspondence>);
			this._ticket_statuse = default(EntityRef<ticket_statuse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ticket_id
		{
			get
			{
				return this._ticket_id;
			}
			set
			{
				if ((this._ticket_id != value))
				{
					this.Onticket_idChanging(value);
					this.SendPropertyChanging();
					this._ticket_id = value;
					this.SendPropertyChanged("ticket_id");
					this.Onticket_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id_type", DbType="Int NOT NULL")]
		public int customer_id_type
		{
			get
			{
				return this._customer_id_type;
			}
			set
			{
				if ((this._customer_id_type != value))
				{
					this.Oncustomer_id_typeChanging(value);
					this.SendPropertyChanging();
					this._customer_id_type = value;
					this.SendPropertyChanged("customer_id_type");
					this.Oncustomer_id_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_priority", DbType="Int NOT NULL")]
		public int ticket_priority
		{
			get
			{
				return this._ticket_priority;
			}
			set
			{
				if ((this._ticket_priority != value))
				{
					this.Onticket_priorityChanging(value);
					this.SendPropertyChanging();
					this._ticket_priority = value;
					this.SendPropertyChanged("ticket_priority");
					this.Onticket_priorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int NOT NULL")]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correspondence_id", DbType="Int NOT NULL")]
		public int correspondence_id
		{
			get
			{
				return this._correspondence_id;
			}
			set
			{
				if ((this._correspondence_id != value))
				{
					if (this._correspondence.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncorrespondence_idChanging(value);
					this.SendPropertyChanging();
					this._correspondence_id = value;
					this.SendPropertyChanged("correspondence_id");
					this.Oncorrespondence_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_correspondence_id", DbType="Int NOT NULL")]
		public int sub_correspondence_id
		{
			get
			{
				return this._sub_correspondence_id;
			}
			set
			{
				if ((this._sub_correspondence_id != value))
				{
					this.Onsub_correspondence_idChanging(value);
					this.SendPropertyChanging();
					this._sub_correspondence_id = value;
					this.SendPropertyChanged("sub_correspondence_id");
					this.Onsub_correspondence_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assigned_to", DbType="Int")]
		public System.Nullable<int> assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this.Onassigned_toChanging(value);
					this.SendPropertyChanging();
					this._assigned_to = value;
					this.SendPropertyChanged("assigned_to");
					this.Onassigned_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_time_created", DbType="DateTime2 NOT NULL")]
		public System.DateTime date_time_created
		{
			get
			{
				return this._date_time_created;
			}
			set
			{
				if ((this._date_time_created != value))
				{
					this.Ondate_time_createdChanging(value);
					this.SendPropertyChanging();
					this._date_time_created = value;
					this.SendPropertyChanged("date_time_created");
					this.Ondate_time_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_month", DbType="Int NOT NULL")]
		public int ticket_month
		{
			get
			{
				return this._ticket_month;
			}
			set
			{
				if ((this._ticket_month != value))
				{
					this.Onticket_monthChanging(value);
					this.SendPropertyChanging();
					this._ticket_month = value;
					this.SendPropertyChanged("ticket_month");
					this.Onticket_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_year", DbType="Int NOT NULL")]
		public int ticket_year
		{
			get
			{
				return this._ticket_year;
			}
			set
			{
				if ((this._ticket_year != value))
				{
					this.Onticket_yearChanging(value);
					this.SendPropertyChanging();
					this._ticket_year = value;
					this.SendPropertyChanged("ticket_year");
					this.Onticket_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					if (this._ticket_statuse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int NOT NULL")]
		public int owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime2 NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="Int")]
		public System.Nullable<int> modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime2")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_ticket", Storage="_category", ThisKey="category_id", OtherKey="id", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.tickets.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.tickets.Add(this);
						this._category_id = value.id;
					}
					else
					{
						this._category_id = default(int);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="correspondence_ticket", Storage="_correspondence", ThisKey="correspondence_id", OtherKey="id", IsForeignKey=true)]
		public correspondence correspondence
		{
			get
			{
				return this._correspondence.Entity;
			}
			set
			{
				correspondence previousValue = this._correspondence.Entity;
				if (((previousValue != value) 
							|| (this._correspondence.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._correspondence.Entity = null;
						previousValue.tickets.Remove(this);
					}
					this._correspondence.Entity = value;
					if ((value != null))
					{
						value.tickets.Add(this);
						this._correspondence_id = value.id;
					}
					else
					{
						this._correspondence_id = default(int);
					}
					this.SendPropertyChanged("correspondence");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ticket_statuse_ticket", Storage="_ticket_statuse", ThisKey="status", OtherKey="id", IsForeignKey=true)]
		public ticket_statuse ticket_statuse
		{
			get
			{
				return this._ticket_statuse.Entity;
			}
			set
			{
				ticket_statuse previousValue = this._ticket_statuse.Entity;
				if (((previousValue != value) 
							|| (this._ticket_statuse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ticket_statuse.Entity = null;
						previousValue.tickets.Remove(this);
					}
					this._ticket_statuse.Entity = value;
					if ((value != null))
					{
						value.tickets.Add(this);
						this._status = value.id;
					}
					else
					{
						this._status = default(int);
					}
					this.SendPropertyChanged("ticket_statuse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ticket_comments")]
	public partial class ticket_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ticket_id;
		
		private System.DateTime _comment_date;
		
		private string _comment;
		
		private int _owner;
		
		private string _status;
		
		private EntityRef<ticket_comment> _ticket_comment2;
		
		private EntityRef<ticket_comment> _ticket_comment4;
		
		private EntityRef<ticket_comment> _ticket_comment1;
		
		private EntityRef<ticket_comment> _ticket_comment3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onticket_idChanging(string value);
    partial void Onticket_idChanged();
    partial void Oncomment_dateChanging(System.DateTime value);
    partial void Oncomment_dateChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnownerChanging(int value);
    partial void OnownerChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public ticket_comment()
		{
			this._ticket_comment2 = default(EntityRef<ticket_comment>);
			this._ticket_comment4 = default(EntityRef<ticket_comment>);
			this._ticket_comment1 = default(EntityRef<ticket_comment>);
			this._ticket_comment3 = default(EntityRef<ticket_comment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if ((this._ticket_comment1.HasLoadedOrAssignedValue || this._ticket_comment3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ticket_id
		{
			get
			{
				return this._ticket_id;
			}
			set
			{
				if ((this._ticket_id != value))
				{
					this.Onticket_idChanging(value);
					this.SendPropertyChanging();
					this._ticket_id = value;
					this.SendPropertyChanged("ticket_id");
					this.Onticket_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_date", DbType="DateTime2 NOT NULL")]
		public System.DateTime comment_date
		{
			get
			{
				return this._comment_date;
			}
			set
			{
				if ((this._comment_date != value))
				{
					this.Oncomment_dateChanging(value);
					this.SendPropertyChanging();
					this._comment_date = value;
					this.SendPropertyChanged("comment_date");
					this.Oncomment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int NOT NULL")]
		public int owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ticket_comment_ticket_comment", Storage="_ticket_comment2", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public ticket_comment ticket_comment2
		{
			get
			{
				return this._ticket_comment2.Entity;
			}
			set
			{
				ticket_comment previousValue = this._ticket_comment2.Entity;
				if (((previousValue != value) 
							|| (this._ticket_comment2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ticket_comment2.Entity = null;
						previousValue.ticket_comment1 = null;
					}
					this._ticket_comment2.Entity = value;
					if ((value != null))
					{
						value.ticket_comment1 = this;
					}
					this.SendPropertyChanged("ticket_comment2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ticket_comment_ticket_comment1", Storage="_ticket_comment4", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public ticket_comment ticket_comment4
		{
			get
			{
				return this._ticket_comment4.Entity;
			}
			set
			{
				ticket_comment previousValue = this._ticket_comment4.Entity;
				if (((previousValue != value) 
							|| (this._ticket_comment4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ticket_comment4.Entity = null;
						previousValue.ticket_comment3 = null;
					}
					this._ticket_comment4.Entity = value;
					if ((value != null))
					{
						value.ticket_comment3 = this;
					}
					this.SendPropertyChanged("ticket_comment4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ticket_comment_ticket_comment", Storage="_ticket_comment1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public ticket_comment ticket_comment1
		{
			get
			{
				return this._ticket_comment1.Entity;
			}
			set
			{
				ticket_comment previousValue = this._ticket_comment1.Entity;
				if (((previousValue != value) 
							|| (this._ticket_comment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ticket_comment1.Entity = null;
						previousValue.ticket_comment2 = null;
					}
					this._ticket_comment1.Entity = value;
					if ((value != null))
					{
						value.ticket_comment2 = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("ticket_comment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ticket_comment_ticket_comment1", Storage="_ticket_comment3", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public ticket_comment ticket_comment3
		{
			get
			{
				return this._ticket_comment3.Entity;
			}
			set
			{
				ticket_comment previousValue = this._ticket_comment3.Entity;
				if (((previousValue != value) 
							|| (this._ticket_comment3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ticket_comment3.Entity = null;
						previousValue.ticket_comment4 = null;
					}
					this._ticket_comment3.Entity = value;
					if ((value != null))
					{
						value.ticket_comment4 = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("ticket_comment3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
