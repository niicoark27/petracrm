#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace petracrm.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Petra5")]
	public partial class petraMicrogenDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEntityPerson(EntityPerson instance);
    partial void UpdateEntityPerson(EntityPerson instance);
    partial void DeleteEntityPerson(EntityPerson instance);
    partial void InsertEntity(Entity instance);
    partial void UpdateEntity(Entity instance);
    partial void DeleteEntity(Entity instance);
    partial void InsertEntityContact(EntityContact instance);
    partial void UpdateEntityContact(EntityContact instance);
    partial void DeleteEntityContact(EntityContact instance);
    partial void InsertAssociation(Association instance);
    partial void UpdateAssociation(Association instance);
    partial void DeleteAssociation(Association instance);
    partial void InsertEntityClient(EntityClient instance);
    partial void UpdateEntityClient(EntityClient instance);
    partial void DeleteEntityClient(EntityClient instance);
    partial void InsertEntityRole(EntityRole instance);
    partial void UpdateEntityRole(EntityRole instance);
    partial void DeleteEntityRole(EntityRole instance);
    #endregion
		
		public petraMicrogenDataContext() : 
				base(global::petracrm.Properties.Settings.Default.Petra5ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public petraMicrogenDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public petraMicrogenDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public petraMicrogenDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public petraMicrogenDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EntityPerson> EntityPersons
		{
			get
			{
				return this.GetTable<EntityPerson>();
			}
		}
		
		public System.Data.Linq.Table<Entity> Entities
		{
			get
			{
				return this.GetTable<Entity>();
			}
		}
		
		public System.Data.Linq.Table<EntityContact> EntityContacts
		{
			get
			{
				return this.GetTable<EntityContact>();
			}
		}
		
		public System.Data.Linq.Table<Association> Associations
		{
			get
			{
				return this.GetTable<Association>();
			}
		}
		
		public System.Data.Linq.Table<EntityClient> EntityClients
		{
			get
			{
				return this.GetTable<EntityClient>();
			}
		}
		
		public System.Data.Linq.Table<EntityRole> EntityRoles
		{
			get
			{
				return this.GetTable<EntityRole>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityPerson")]
	public partial class EntityPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityID;
		
		private System.Nullable<int> _TitleID;
		
		private string _FirstName;
		
		private string _SecondNames;
		
		private string _Surname;
		
		private string _SuffixName;
		
		private string _KnownAs;
		
		private string _Salutation;
		
		private System.Nullable<char> _Gender;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private System.Nullable<int> _NationalityID;
		
		private System.Nullable<int> _ResidencyID;
		
		private string _EmailAddress;
		
		private string _Occupation;
		
		private string _PassportNo;
		
		private System.Nullable<int> _AssetsCurrID;
		
		private System.Nullable<decimal> _AssetsValue;
		
		private System.Nullable<System.DateTime> _AssetsDate;
		
		private System.Nullable<int> _DomicileID;
		
		private System.Nullable<int> _DomicileAcquisitionID;
		
		private System.Nullable<System.DateTime> _DateAcquired;
		
		private System.Nullable<int> _NationalityOfOriginID;
		
		private int _PersonDisplayTypeId;
		
		private System.Nullable<int> _MaritalStatusID;
		
		private System.Nullable<System.DateTime> _DeceasedDate;
		
		private System.Nullable<int> _BaseCurrencyID;
		
		private System.Nullable<System.DateTime> _DateOpened;
		
		private System.Nullable<System.DateTime> _DateAccepted;
		
		private string _NationalInsuranceNo;
		
		private string _SignatureFile;
		
		private System.Nullable<char> _DefaultLevel;
		
		private System.Nullable<int> _Nationality2ID;
		
		private System.Nullable<int> _Nationality3ID;
		
		private EntityRef<Entity> _Entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIDChanging(int value);
    partial void OnEntityIDChanged();
    partial void OnTitleIDChanging(System.Nullable<int> value);
    partial void OnTitleIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnSecondNamesChanging(string value);
    partial void OnSecondNamesChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnSuffixNameChanging(string value);
    partial void OnSuffixNameChanged();
    partial void OnKnownAsChanging(string value);
    partial void OnKnownAsChanged();
    partial void OnSalutationChanging(string value);
    partial void OnSalutationChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnNationalityIDChanging(System.Nullable<int> value);
    partial void OnNationalityIDChanged();
    partial void OnResidencyIDChanging(System.Nullable<int> value);
    partial void OnResidencyIDChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnPassportNoChanging(string value);
    partial void OnPassportNoChanged();
    partial void OnAssetsCurrIDChanging(System.Nullable<int> value);
    partial void OnAssetsCurrIDChanged();
    partial void OnAssetsValueChanging(System.Nullable<decimal> value);
    partial void OnAssetsValueChanged();
    partial void OnAssetsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAssetsDateChanged();
    partial void OnDomicileIDChanging(System.Nullable<int> value);
    partial void OnDomicileIDChanged();
    partial void OnDomicileAcquisitionIDChanging(System.Nullable<int> value);
    partial void OnDomicileAcquisitionIDChanged();
    partial void OnDateAcquiredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAcquiredChanged();
    partial void OnNationalityOfOriginIDChanging(System.Nullable<int> value);
    partial void OnNationalityOfOriginIDChanged();
    partial void OnPersonDisplayTypeIdChanging(int value);
    partial void OnPersonDisplayTypeIdChanged();
    partial void OnMaritalStatusIDChanging(System.Nullable<int> value);
    partial void OnMaritalStatusIDChanged();
    partial void OnDeceasedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeceasedDateChanged();
    partial void OnBaseCurrencyIDChanging(System.Nullable<int> value);
    partial void OnBaseCurrencyIDChanged();
    partial void OnDateOpenedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpenedChanged();
    partial void OnDateAcceptedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAcceptedChanged();
    partial void OnNationalInsuranceNoChanging(string value);
    partial void OnNationalInsuranceNoChanged();
    partial void OnSignatureFileChanging(string value);
    partial void OnSignatureFileChanged();
    partial void OnDefaultLevelChanging(System.Nullable<char> value);
    partial void OnDefaultLevelChanged();
    partial void OnNationality2IDChanging(System.Nullable<int> value);
    partial void OnNationality2IDChanged();
    partial void OnNationality3IDChanging(System.Nullable<int> value);
    partial void OnNationality3IDChanged();
    #endregion
		
		public EntityPerson()
		{
			this._Entity = default(EntityRef<Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					if (this._Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleID", DbType="Int")]
		public System.Nullable<int> TitleID
		{
			get
			{
				return this._TitleID;
			}
			set
			{
				if ((this._TitleID != value))
				{
					this.OnTitleIDChanging(value);
					this.SendPropertyChanging();
					this._TitleID = value;
					this.SendPropertyChanged("TitleID");
					this.OnTitleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(40)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondNames", DbType="NVarChar(40)")]
		public string SecondNames
		{
			get
			{
				return this._SecondNames;
			}
			set
			{
				if ((this._SecondNames != value))
				{
					this.OnSecondNamesChanging(value);
					this.SendPropertyChanging();
					this._SecondNames = value;
					this.SendPropertyChanged("SecondNames");
					this.OnSecondNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SuffixName
		{
			get
			{
				return this._SuffixName;
			}
			set
			{
				if ((this._SuffixName != value))
				{
					this.OnSuffixNameChanging(value);
					this.SendPropertyChanging();
					this._SuffixName = value;
					this.SendPropertyChanged("SuffixName");
					this.OnSuffixNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KnownAs", DbType="NVarChar(40)")]
		public string KnownAs
		{
			get
			{
				return this._KnownAs;
			}
			set
			{
				if ((this._KnownAs != value))
				{
					this.OnKnownAsChanging(value);
					this.SendPropertyChanging();
					this._KnownAs = value;
					this.SendPropertyChanged("KnownAs");
					this.OnKnownAsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salutation", DbType="NVarChar(100)")]
		public string Salutation
		{
			get
			{
				return this._Salutation;
			}
			set
			{
				if ((this._Salutation != value))
				{
					this.OnSalutationChanging(value);
					this.SendPropertyChanging();
					this._Salutation = value;
					this.SendPropertyChanged("Salutation");
					this.OnSalutationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityID", DbType="Int")]
		public System.Nullable<int> NationalityID
		{
			get
			{
				return this._NationalityID;
			}
			set
			{
				if ((this._NationalityID != value))
				{
					this.OnNationalityIDChanging(value);
					this.SendPropertyChanging();
					this._NationalityID = value;
					this.SendPropertyChanged("NationalityID");
					this.OnNationalityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidencyID", DbType="Int")]
		public System.Nullable<int> ResidencyID
		{
			get
			{
				return this._ResidencyID;
			}
			set
			{
				if ((this._ResidencyID != value))
				{
					this.OnResidencyIDChanging(value);
					this.SendPropertyChanging();
					this._ResidencyID = value;
					this.SendPropertyChanged("ResidencyID");
					this.OnResidencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(50)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="VarChar(50)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNo", DbType="VarChar(20)")]
		public string PassportNo
		{
			get
			{
				return this._PassportNo;
			}
			set
			{
				if ((this._PassportNo != value))
				{
					this.OnPassportNoChanging(value);
					this.SendPropertyChanging();
					this._PassportNo = value;
					this.SendPropertyChanged("PassportNo");
					this.OnPassportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetsCurrID", DbType="Int")]
		public System.Nullable<int> AssetsCurrID
		{
			get
			{
				return this._AssetsCurrID;
			}
			set
			{
				if ((this._AssetsCurrID != value))
				{
					this.OnAssetsCurrIDChanging(value);
					this.SendPropertyChanging();
					this._AssetsCurrID = value;
					this.SendPropertyChanged("AssetsCurrID");
					this.OnAssetsCurrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetsValue", DbType="Money")]
		public System.Nullable<decimal> AssetsValue
		{
			get
			{
				return this._AssetsValue;
			}
			set
			{
				if ((this._AssetsValue != value))
				{
					this.OnAssetsValueChanging(value);
					this.SendPropertyChanging();
					this._AssetsValue = value;
					this.SendPropertyChanged("AssetsValue");
					this.OnAssetsValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssetsDate
		{
			get
			{
				return this._AssetsDate;
			}
			set
			{
				if ((this._AssetsDate != value))
				{
					this.OnAssetsDateChanging(value);
					this.SendPropertyChanging();
					this._AssetsDate = value;
					this.SendPropertyChanged("AssetsDate");
					this.OnAssetsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomicileID", DbType="Int")]
		public System.Nullable<int> DomicileID
		{
			get
			{
				return this._DomicileID;
			}
			set
			{
				if ((this._DomicileID != value))
				{
					this.OnDomicileIDChanging(value);
					this.SendPropertyChanging();
					this._DomicileID = value;
					this.SendPropertyChanged("DomicileID");
					this.OnDomicileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomicileAcquisitionID", DbType="Int")]
		public System.Nullable<int> DomicileAcquisitionID
		{
			get
			{
				return this._DomicileAcquisitionID;
			}
			set
			{
				if ((this._DomicileAcquisitionID != value))
				{
					this.OnDomicileAcquisitionIDChanging(value);
					this.SendPropertyChanging();
					this._DomicileAcquisitionID = value;
					this.SendPropertyChanged("DomicileAcquisitionID");
					this.OnDomicileAcquisitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAcquired", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAcquired
		{
			get
			{
				return this._DateAcquired;
			}
			set
			{
				if ((this._DateAcquired != value))
				{
					this.OnDateAcquiredChanging(value);
					this.SendPropertyChanging();
					this._DateAcquired = value;
					this.SendPropertyChanged("DateAcquired");
					this.OnDateAcquiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityOfOriginID", DbType="Int")]
		public System.Nullable<int> NationalityOfOriginID
		{
			get
			{
				return this._NationalityOfOriginID;
			}
			set
			{
				if ((this._NationalityOfOriginID != value))
				{
					this.OnNationalityOfOriginIDChanging(value);
					this.SendPropertyChanging();
					this._NationalityOfOriginID = value;
					this.SendPropertyChanged("NationalityOfOriginID");
					this.OnNationalityOfOriginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonDisplayTypeId", DbType="Int NOT NULL")]
		public int PersonDisplayTypeId
		{
			get
			{
				return this._PersonDisplayTypeId;
			}
			set
			{
				if ((this._PersonDisplayTypeId != value))
				{
					this.OnPersonDisplayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PersonDisplayTypeId = value;
					this.SendPropertyChanged("PersonDisplayTypeId");
					this.OnPersonDisplayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatusID", DbType="Int")]
		public System.Nullable<int> MaritalStatusID
		{
			get
			{
				return this._MaritalStatusID;
			}
			set
			{
				if ((this._MaritalStatusID != value))
				{
					this.OnMaritalStatusIDChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatusID = value;
					this.SendPropertyChanged("MaritalStatusID");
					this.OnMaritalStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeceasedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeceasedDate
		{
			get
			{
				return this._DeceasedDate;
			}
			set
			{
				if ((this._DeceasedDate != value))
				{
					this.OnDeceasedDateChanging(value);
					this.SendPropertyChanging();
					this._DeceasedDate = value;
					this.SendPropertyChanged("DeceasedDate");
					this.OnDeceasedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCurrencyID", DbType="Int")]
		public System.Nullable<int> BaseCurrencyID
		{
			get
			{
				return this._BaseCurrencyID;
			}
			set
			{
				if ((this._BaseCurrencyID != value))
				{
					this.OnBaseCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._BaseCurrencyID = value;
					this.SendPropertyChanged("BaseCurrencyID");
					this.OnBaseCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOpened", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOpened
		{
			get
			{
				return this._DateOpened;
			}
			set
			{
				if ((this._DateOpened != value))
				{
					this.OnDateOpenedChanging(value);
					this.SendPropertyChanging();
					this._DateOpened = value;
					this.SendPropertyChanged("DateOpened");
					this.OnDateOpenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAccepted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAccepted
		{
			get
			{
				return this._DateAccepted;
			}
			set
			{
				if ((this._DateAccepted != value))
				{
					this.OnDateAcceptedChanging(value);
					this.SendPropertyChanging();
					this._DateAccepted = value;
					this.SendPropertyChanged("DateAccepted");
					this.OnDateAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalInsuranceNo", DbType="NVarChar(20)")]
		public string NationalInsuranceNo
		{
			get
			{
				return this._NationalInsuranceNo;
			}
			set
			{
				if ((this._NationalInsuranceNo != value))
				{
					this.OnNationalInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._NationalInsuranceNo = value;
					this.SendPropertyChanged("NationalInsuranceNo");
					this.OnNationalInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureFile", DbType="NVarChar(1000)")]
		public string SignatureFile
		{
			get
			{
				return this._SignatureFile;
			}
			set
			{
				if ((this._SignatureFile != value))
				{
					this.OnSignatureFileChanging(value);
					this.SendPropertyChanging();
					this._SignatureFile = value;
					this.SendPropertyChanged("SignatureFile");
					this.OnSignatureFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLevel", DbType="Char(1)")]
		public System.Nullable<char> DefaultLevel
		{
			get
			{
				return this._DefaultLevel;
			}
			set
			{
				if ((this._DefaultLevel != value))
				{
					this.OnDefaultLevelChanging(value);
					this.SendPropertyChanging();
					this._DefaultLevel = value;
					this.SendPropertyChanged("DefaultLevel");
					this.OnDefaultLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality2ID", DbType="Int")]
		public System.Nullable<int> Nationality2ID
		{
			get
			{
				return this._Nationality2ID;
			}
			set
			{
				if ((this._Nationality2ID != value))
				{
					this.OnNationality2IDChanging(value);
					this.SendPropertyChanging();
					this._Nationality2ID = value;
					this.SendPropertyChanged("Nationality2ID");
					this.OnNationality2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality3ID", DbType="Int")]
		public System.Nullable<int> Nationality3ID
		{
			get
			{
				return this._Nationality3ID;
			}
			set
			{
				if ((this._Nationality3ID != value))
				{
					this.OnNationality3IDChanging(value);
					this.SendPropertyChanging();
					this._Nationality3ID = value;
					this.SendPropertyChanged("Nationality3ID");
					this.OnNationality3IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityPerson", Storage="_Entity", ThisKey="EntityID", OtherKey="EntityID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Entity Entity
		{
			get
			{
				return this._Entity.Entity;
			}
			set
			{
				Entity previousValue = this._Entity.Entity;
				if (((previousValue != value) 
							|| (this._Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity.Entity = null;
						previousValue.EntityPerson = null;
					}
					this._Entity.Entity = value;
					if ((value != null))
					{
						value.EntityPerson = this;
						this._EntityID = value.EntityID;
					}
					else
					{
						this._EntityID = default(int);
					}
					this.SendPropertyChanged("Entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entity")]
	public partial class Entity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityID;
		
		private int _EntityTypeID;
		
		private System.Nullable<int> _EntitySubTypeID;
		
		private string _EntityKey;
		
		private System.Nullable<int> _StatusID;
		
		private char _RiskLevel;
		
		private System.Nullable<int> _RiskScore;
		
		private string _Warning;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _AmendedOn;
		
		private string _AmendedBy;
		
		private System.Data.Linq.Binary _TS;
		
		private System.Nullable<int> _BaseCurrencyID;
		
		private System.Nullable<byte> _YearEndDay;
		
		private System.Nullable<byte> _YearEndMonth;
		
		private bool _IsManagingEntity;
		
		private System.Nullable<int> _ManagingEntityID;
		
		private System.Nullable<int> _NoOfASignatories;
		
		private System.Nullable<int> _NoOfBSignatories;
		
		private System.Nullable<int> _NoOfCSignatories;
		
		private string _PEPorHPI;
		
		private bool _ComplianceVerified;
		
		private bool _ExternallyBooksKept;
		
		private EntityRef<EntityPerson> _EntityPerson;
		
		private EntitySet<Entity> _Entities;
		
		private EntitySet<EntityContact> _EntityContacts;
		
		private EntitySet<Association> _Associations;
		
		private EntitySet<Association> _Associations1;
		
		private EntityRef<EntityClient> _EntityClient;
		
		private EntitySet<EntityRole> _EntityRoles;
		
		private EntityRef<Entity> _Entity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIDChanging(int value);
    partial void OnEntityIDChanged();
    partial void OnEntityTypeIDChanging(int value);
    partial void OnEntityTypeIDChanged();
    partial void OnEntitySubTypeIDChanging(System.Nullable<int> value);
    partial void OnEntitySubTypeIDChanged();
    partial void OnEntityKeyChanging(string value);
    partial void OnEntityKeyChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnRiskLevelChanging(char value);
    partial void OnRiskLevelChanged();
    partial void OnRiskScoreChanging(System.Nullable<int> value);
    partial void OnRiskScoreChanged();
    partial void OnWarningChanging(string value);
    partial void OnWarningChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnAmendedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAmendedOnChanged();
    partial void OnAmendedByChanging(string value);
    partial void OnAmendedByChanged();
    partial void OnTSChanging(System.Data.Linq.Binary value);
    partial void OnTSChanged();
    partial void OnBaseCurrencyIDChanging(System.Nullable<int> value);
    partial void OnBaseCurrencyIDChanged();
    partial void OnYearEndDayChanging(System.Nullable<byte> value);
    partial void OnYearEndDayChanged();
    partial void OnYearEndMonthChanging(System.Nullable<byte> value);
    partial void OnYearEndMonthChanged();
    partial void OnIsManagingEntityChanging(bool value);
    partial void OnIsManagingEntityChanged();
    partial void OnManagingEntityIDChanging(System.Nullable<int> value);
    partial void OnManagingEntityIDChanged();
    partial void OnNoOfASignatoriesChanging(System.Nullable<int> value);
    partial void OnNoOfASignatoriesChanged();
    partial void OnNoOfBSignatoriesChanging(System.Nullable<int> value);
    partial void OnNoOfBSignatoriesChanged();
    partial void OnNoOfCSignatoriesChanging(System.Nullable<int> value);
    partial void OnNoOfCSignatoriesChanged();
    partial void OnPEPorHPIChanging(string value);
    partial void OnPEPorHPIChanged();
    partial void OnComplianceVerifiedChanging(bool value);
    partial void OnComplianceVerifiedChanged();
    partial void OnExternallyBooksKeptChanging(bool value);
    partial void OnExternallyBooksKeptChanged();
    #endregion
		
		public Entity()
		{
			this._EntityPerson = default(EntityRef<EntityPerson>);
			this._Entities = new EntitySet<Entity>(new Action<Entity>(this.attach_Entities), new Action<Entity>(this.detach_Entities));
			this._EntityContacts = new EntitySet<EntityContact>(new Action<EntityContact>(this.attach_EntityContacts), new Action<EntityContact>(this.detach_EntityContacts));
			this._Associations = new EntitySet<Association>(new Action<Association>(this.attach_Associations), new Action<Association>(this.detach_Associations));
			this._Associations1 = new EntitySet<Association>(new Action<Association>(this.attach_Associations1), new Action<Association>(this.detach_Associations1));
			this._EntityClient = default(EntityRef<EntityClient>);
			this._EntityRoles = new EntitySet<EntityRole>(new Action<EntityRole>(this.attach_EntityRoles), new Action<EntityRole>(this.detach_EntityRoles));
			this._Entity1 = default(EntityRef<Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this.OnEntityTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeID = value;
					this.SendPropertyChanged("EntityTypeID");
					this.OnEntityTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitySubTypeID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EntitySubTypeID
		{
			get
			{
				return this._EntitySubTypeID;
			}
			set
			{
				if ((this._EntitySubTypeID != value))
				{
					this.OnEntitySubTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntitySubTypeID = value;
					this.SendPropertyChanged("EntitySubTypeID");
					this.OnEntitySubTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityKey", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EntityKey
		{
			get
			{
				return this._EntityKey;
			}
			set
			{
				if ((this._EntityKey != value))
				{
					this.OnEntityKeyChanging(value);
					this.SendPropertyChanging();
					this._EntityKey = value;
					this.SendPropertyChanged("EntityKey");
					this.OnEntityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskScore", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RiskScore
		{
			get
			{
				return this._RiskScore;
			}
			set
			{
				if ((this._RiskScore != value))
				{
					this.OnRiskScoreChanging(value);
					this.SendPropertyChanging();
					this._RiskScore = value;
					this.SendPropertyChanged("RiskScore");
					this.OnRiskScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warning", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Warning
		{
			get
			{
				return this._Warning;
			}
			set
			{
				if ((this._Warning != value))
				{
					this.OnWarningChanging(value);
					this.SendPropertyChanging();
					this._Warning = value;
					this.SendPropertyChanged("Warning");
					this.OnWarningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AmendedOn
		{
			get
			{
				return this._AmendedOn;
			}
			set
			{
				if ((this._AmendedOn != value))
				{
					this.OnAmendedOnChanging(value);
					this.SendPropertyChanging();
					this._AmendedOn = value;
					this.SendPropertyChanged("AmendedOn");
					this.OnAmendedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendedBy", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string AmendedBy
		{
			get
			{
				return this._AmendedBy;
			}
			set
			{
				if ((this._AmendedBy != value))
				{
					this.OnAmendedByChanging(value);
					this.SendPropertyChanging();
					this._AmendedBy = value;
					this.SendPropertyChanged("AmendedBy");
					this.OnAmendedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCurrencyID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BaseCurrencyID
		{
			get
			{
				return this._BaseCurrencyID;
			}
			set
			{
				if ((this._BaseCurrencyID != value))
				{
					this.OnBaseCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._BaseCurrencyID = value;
					this.SendPropertyChanged("BaseCurrencyID");
					this.OnBaseCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearEndDay", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> YearEndDay
		{
			get
			{
				return this._YearEndDay;
			}
			set
			{
				if ((this._YearEndDay != value))
				{
					this.OnYearEndDayChanging(value);
					this.SendPropertyChanging();
					this._YearEndDay = value;
					this.SendPropertyChanged("YearEndDay");
					this.OnYearEndDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearEndMonth", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> YearEndMonth
		{
			get
			{
				return this._YearEndMonth;
			}
			set
			{
				if ((this._YearEndMonth != value))
				{
					this.OnYearEndMonthChanging(value);
					this.SendPropertyChanging();
					this._YearEndMonth = value;
					this.SendPropertyChanged("YearEndMonth");
					this.OnYearEndMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManagingEntity", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsManagingEntity
		{
			get
			{
				return this._IsManagingEntity;
			}
			set
			{
				if ((this._IsManagingEntity != value))
				{
					this.OnIsManagingEntityChanging(value);
					this.SendPropertyChanging();
					this._IsManagingEntity = value;
					this.SendPropertyChanged("IsManagingEntity");
					this.OnIsManagingEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagingEntityID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ManagingEntityID
		{
			get
			{
				return this._ManagingEntityID;
			}
			set
			{
				if ((this._ManagingEntityID != value))
				{
					if (this._Entity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagingEntityIDChanging(value);
					this.SendPropertyChanging();
					this._ManagingEntityID = value;
					this.SendPropertyChanged("ManagingEntityID");
					this.OnManagingEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfASignatories", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NoOfASignatories
		{
			get
			{
				return this._NoOfASignatories;
			}
			set
			{
				if ((this._NoOfASignatories != value))
				{
					this.OnNoOfASignatoriesChanging(value);
					this.SendPropertyChanging();
					this._NoOfASignatories = value;
					this.SendPropertyChanged("NoOfASignatories");
					this.OnNoOfASignatoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfBSignatories", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NoOfBSignatories
		{
			get
			{
				return this._NoOfBSignatories;
			}
			set
			{
				if ((this._NoOfBSignatories != value))
				{
					this.OnNoOfBSignatoriesChanging(value);
					this.SendPropertyChanging();
					this._NoOfBSignatories = value;
					this.SendPropertyChanged("NoOfBSignatories");
					this.OnNoOfBSignatoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfCSignatories", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NoOfCSignatories
		{
			get
			{
				return this._NoOfCSignatories;
			}
			set
			{
				if ((this._NoOfCSignatories != value))
				{
					this.OnNoOfCSignatoriesChanging(value);
					this.SendPropertyChanging();
					this._NoOfCSignatories = value;
					this.SendPropertyChanged("NoOfCSignatories");
					this.OnNoOfCSignatoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEPorHPI", DbType="Char(3)", UpdateCheck=UpdateCheck.Never)]
		public string PEPorHPI
		{
			get
			{
				return this._PEPorHPI;
			}
			set
			{
				if ((this._PEPorHPI != value))
				{
					this.OnPEPorHPIChanging(value);
					this.SendPropertyChanging();
					this._PEPorHPI = value;
					this.SendPropertyChanged("PEPorHPI");
					this.OnPEPorHPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplianceVerified", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ComplianceVerified
		{
			get
			{
				return this._ComplianceVerified;
			}
			set
			{
				if ((this._ComplianceVerified != value))
				{
					this.OnComplianceVerifiedChanging(value);
					this.SendPropertyChanging();
					this._ComplianceVerified = value;
					this.SendPropertyChanged("ComplianceVerified");
					this.OnComplianceVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternallyBooksKept", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ExternallyBooksKept
		{
			get
			{
				return this._ExternallyBooksKept;
			}
			set
			{
				if ((this._ExternallyBooksKept != value))
				{
					this.OnExternallyBooksKeptChanging(value);
					this.SendPropertyChanging();
					this._ExternallyBooksKept = value;
					this.SendPropertyChanged("ExternallyBooksKept");
					this.OnExternallyBooksKeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityPerson", Storage="_EntityPerson", ThisKey="EntityID", OtherKey="EntityID", IsUnique=true, IsForeignKey=false)]
		public EntityPerson EntityPerson
		{
			get
			{
				return this._EntityPerson.Entity;
			}
			set
			{
				EntityPerson previousValue = this._EntityPerson.Entity;
				if (((previousValue != value) 
							|| (this._EntityPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityPerson.Entity = null;
						previousValue.Entity = null;
					}
					this._EntityPerson.Entity = value;
					if ((value != null))
					{
						value.Entity = this;
					}
					this.SendPropertyChanged("EntityPerson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Entity", Storage="_Entities", ThisKey="EntityID", OtherKey="ManagingEntityID")]
		public EntitySet<Entity> Entities
		{
			get
			{
				return this._Entities;
			}
			set
			{
				this._Entities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityContact", Storage="_EntityContacts", ThisKey="EntityID", OtherKey="EntityID")]
		public EntitySet<EntityContact> EntityContacts
		{
			get
			{
				return this._EntityContacts;
			}
			set
			{
				this._EntityContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Association", Storage="_Associations", ThisKey="EntityID", OtherKey="SourceEntityID")]
		public EntitySet<Association> Associations
		{
			get
			{
				return this._Associations;
			}
			set
			{
				this._Associations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Association1", Storage="_Associations1", ThisKey="EntityID", OtherKey="TargetEntityID")]
		public EntitySet<Association> Associations1
		{
			get
			{
				return this._Associations1;
			}
			set
			{
				this._Associations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityClient", Storage="_EntityClient", ThisKey="EntityID", OtherKey="EntityID", IsUnique=true, IsForeignKey=false)]
		public EntityClient EntityClient
		{
			get
			{
				return this._EntityClient.Entity;
			}
			set
			{
				EntityClient previousValue = this._EntityClient.Entity;
				if (((previousValue != value) 
							|| (this._EntityClient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityClient.Entity = null;
						previousValue.Entity = null;
					}
					this._EntityClient.Entity = value;
					if ((value != null))
					{
						value.Entity = this;
					}
					this.SendPropertyChanged("EntityClient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityRole", Storage="_EntityRoles", ThisKey="EntityID", OtherKey="EntityID")]
		public EntitySet<EntityRole> EntityRoles
		{
			get
			{
				return this._EntityRoles;
			}
			set
			{
				this._EntityRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Entity", Storage="_Entity1", ThisKey="ManagingEntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity1
		{
			get
			{
				return this._Entity1.Entity;
			}
			set
			{
				Entity previousValue = this._Entity1.Entity;
				if (((previousValue != value) 
							|| (this._Entity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity1.Entity = null;
						previousValue.Entities.Remove(this);
					}
					this._Entity1.Entity = value;
					if ((value != null))
					{
						value.Entities.Add(this);
						this._ManagingEntityID = value.EntityID;
					}
					else
					{
						this._ManagingEntityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Entity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entities(Entity entity)
		{
			this.SendPropertyChanging();
			entity.Entity1 = this;
		}
		
		private void detach_Entities(Entity entity)
		{
			this.SendPropertyChanging();
			entity.Entity1 = null;
		}
		
		private void attach_EntityContacts(EntityContact entity)
		{
			this.SendPropertyChanging();
			entity.Entity = this;
		}
		
		private void detach_EntityContacts(EntityContact entity)
		{
			this.SendPropertyChanging();
			entity.Entity = null;
		}
		
		private void attach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Entity = this;
		}
		
		private void detach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Entity = null;
		}
		
		private void attach_Associations1(Association entity)
		{
			this.SendPropertyChanging();
			entity.Entity1 = this;
		}
		
		private void detach_Associations1(Association entity)
		{
			this.SendPropertyChanging();
			entity.Entity1 = null;
		}
		
		private void attach_EntityRoles(EntityRole entity)
		{
			this.SendPropertyChanging();
			entity.Entity = this;
		}
		
		private void detach_EntityRoles(EntityRole entity)
		{
			this.SendPropertyChanging();
			entity.Entity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityContact")]
	public partial class EntityContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactID;
		
		private int _EntityID;
		
		private string _ContactName;
		
		private string _TelephoneNo;
		
		private string _MobileNo;
		
		private string _FacsimileNo;
		
		private string _Email;
		
		private bool _OnlineAccess;
		
		private System.Nullable<bool> _AddToFavourite;
		
		private System.Nullable<int> _DialingCodeTel;
		
		private System.Nullable<int> _DialingCodeMobile;
		
		private System.Nullable<int> _DialingCodeFax;
		
		private string _Extension;
		
		private EntityRef<Entity> _Entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnEntityIDChanging(int value);
    partial void OnEntityIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnFacsimileNoChanging(string value);
    partial void OnFacsimileNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnOnlineAccessChanging(bool value);
    partial void OnOnlineAccessChanged();
    partial void OnAddToFavouriteChanging(System.Nullable<bool> value);
    partial void OnAddToFavouriteChanged();
    partial void OnDialingCodeTelChanging(System.Nullable<int> value);
    partial void OnDialingCodeTelChanged();
    partial void OnDialingCodeMobileChanging(System.Nullable<int> value);
    partial void OnDialingCodeMobileChanged();
    partial void OnDialingCodeFaxChanging(System.Nullable<int> value);
    partial void OnDialingCodeFaxChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    #endregion
		
		public EntityContact()
		{
			this._Entity = default(EntityRef<Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="Int NOT NULL")]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					if (this._Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(20)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(20)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacsimileNo", DbType="VarChar(20)")]
		public string FacsimileNo
		{
			get
			{
				return this._FacsimileNo;
			}
			set
			{
				if ((this._FacsimileNo != value))
				{
					this.OnFacsimileNoChanging(value);
					this.SendPropertyChanging();
					this._FacsimileNo = value;
					this.SendPropertyChanged("FacsimileNo");
					this.OnFacsimileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineAccess", DbType="Bit NOT NULL")]
		public bool OnlineAccess
		{
			get
			{
				return this._OnlineAccess;
			}
			set
			{
				if ((this._OnlineAccess != value))
				{
					this.OnOnlineAccessChanging(value);
					this.SendPropertyChanging();
					this._OnlineAccess = value;
					this.SendPropertyChanged("OnlineAccess");
					this.OnOnlineAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddToFavourite", DbType="Bit")]
		public System.Nullable<bool> AddToFavourite
		{
			get
			{
				return this._AddToFavourite;
			}
			set
			{
				if ((this._AddToFavourite != value))
				{
					this.OnAddToFavouriteChanging(value);
					this.SendPropertyChanging();
					this._AddToFavourite = value;
					this.SendPropertyChanged("AddToFavourite");
					this.OnAddToFavouriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialingCodeTel", DbType="Int")]
		public System.Nullable<int> DialingCodeTel
		{
			get
			{
				return this._DialingCodeTel;
			}
			set
			{
				if ((this._DialingCodeTel != value))
				{
					this.OnDialingCodeTelChanging(value);
					this.SendPropertyChanging();
					this._DialingCodeTel = value;
					this.SendPropertyChanged("DialingCodeTel");
					this.OnDialingCodeTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialingCodeMobile", DbType="Int")]
		public System.Nullable<int> DialingCodeMobile
		{
			get
			{
				return this._DialingCodeMobile;
			}
			set
			{
				if ((this._DialingCodeMobile != value))
				{
					this.OnDialingCodeMobileChanging(value);
					this.SendPropertyChanging();
					this._DialingCodeMobile = value;
					this.SendPropertyChanged("DialingCodeMobile");
					this.OnDialingCodeMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialingCodeFax", DbType="Int")]
		public System.Nullable<int> DialingCodeFax
		{
			get
			{
				return this._DialingCodeFax;
			}
			set
			{
				if ((this._DialingCodeFax != value))
				{
					this.OnDialingCodeFaxChanging(value);
					this.SendPropertyChanging();
					this._DialingCodeFax = value;
					this.SendPropertyChanged("DialingCodeFax");
					this.OnDialingCodeFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(10)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityContact", Storage="_Entity", ThisKey="EntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity
		{
			get
			{
				return this._Entity.Entity;
			}
			set
			{
				Entity previousValue = this._Entity.Entity;
				if (((previousValue != value) 
							|| (this._Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity.Entity = null;
						previousValue.EntityContacts.Remove(this);
					}
					this._Entity.Entity = value;
					if ((value != null))
					{
						value.EntityContacts.Add(this);
						this._EntityID = value.EntityID;
					}
					else
					{
						this._EntityID = default(int);
					}
					this.SendPropertyChanged("Entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Association")]
	public partial class Association : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssociationID;
		
		private int _SourceEntityID;
		
		private int _TargetEntityID;
		
		private int _RoleTypeID;
		
		private char _StatusID;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<decimal> _PercentageHeld;
		
		private System.Nullable<int> _DirectorAssociationID;
		
		private System.Nullable<int> _EntityBankID;
		
		private System.Nullable<int> _POAID;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _AmendedOn;
		
		private string _AmendedBy;
		
		private System.Data.Linq.Binary _TS;
		
		private bool _IsFirst;
		
		private System.Nullable<int> _PortfolioID;
		
		private EntitySet<Association> _Associations;
		
		private EntityRef<Association> _Association1;
		
		private EntityRef<Entity> _Entity;
		
		private EntityRef<Entity> _Entity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssociationIDChanging(int value);
    partial void OnAssociationIDChanged();
    partial void OnSourceEntityIDChanging(int value);
    partial void OnSourceEntityIDChanged();
    partial void OnTargetEntityIDChanging(int value);
    partial void OnTargetEntityIDChanged();
    partial void OnRoleTypeIDChanging(int value);
    partial void OnRoleTypeIDChanged();
    partial void OnStatusIDChanging(char value);
    partial void OnStatusIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnPercentageHeldChanging(System.Nullable<decimal> value);
    partial void OnPercentageHeldChanged();
    partial void OnDirectorAssociationIDChanging(System.Nullable<int> value);
    partial void OnDirectorAssociationIDChanged();
    partial void OnEntityBankIDChanging(System.Nullable<int> value);
    partial void OnEntityBankIDChanged();
    partial void OnPOAIDChanging(System.Nullable<int> value);
    partial void OnPOAIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnAmendedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAmendedOnChanged();
    partial void OnAmendedByChanging(string value);
    partial void OnAmendedByChanged();
    partial void OnTSChanging(System.Data.Linq.Binary value);
    partial void OnTSChanged();
    partial void OnIsFirstChanging(bool value);
    partial void OnIsFirstChanged();
    partial void OnPortfolioIDChanging(System.Nullable<int> value);
    partial void OnPortfolioIDChanged();
    #endregion
		
		public Association()
		{
			this._Associations = new EntitySet<Association>(new Action<Association>(this.attach_Associations), new Action<Association>(this.detach_Associations));
			this._Association1 = default(EntityRef<Association>);
			this._Entity = default(EntityRef<Entity>);
			this._Entity1 = default(EntityRef<Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int AssociationID
		{
			get
			{
				return this._AssociationID;
			}
			set
			{
				if ((this._AssociationID != value))
				{
					this.OnAssociationIDChanging(value);
					this.SendPropertyChanging();
					this._AssociationID = value;
					this.SendPropertyChanged("AssociationID");
					this.OnAssociationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceEntityID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SourceEntityID
		{
			get
			{
				return this._SourceEntityID;
			}
			set
			{
				if ((this._SourceEntityID != value))
				{
					if (this._Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceEntityIDChanging(value);
					this.SendPropertyChanging();
					this._SourceEntityID = value;
					this.SendPropertyChanged("SourceEntityID");
					this.OnSourceEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetEntityID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TargetEntityID
		{
			get
			{
				return this._TargetEntityID;
			}
			set
			{
				if ((this._TargetEntityID != value))
				{
					if (this._Entity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetEntityIDChanging(value);
					this.SendPropertyChanging();
					this._TargetEntityID = value;
					this.SendPropertyChanged("TargetEntityID");
					this.OnTargetEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int RoleTypeID
		{
			get
			{
				return this._RoleTypeID;
			}
			set
			{
				if ((this._RoleTypeID != value))
				{
					this.OnRoleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RoleTypeID = value;
					this.SendPropertyChanged("RoleTypeID");
					this.OnRoleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Association1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageHeld", DbType="Decimal(10,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PercentageHeld
		{
			get
			{
				return this._PercentageHeld;
			}
			set
			{
				if ((this._PercentageHeld != value))
				{
					this.OnPercentageHeldChanging(value);
					this.SendPropertyChanging();
					this._PercentageHeld = value;
					this.SendPropertyChanged("PercentageHeld");
					this.OnPercentageHeldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorAssociationID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DirectorAssociationID
		{
			get
			{
				return this._DirectorAssociationID;
			}
			set
			{
				if ((this._DirectorAssociationID != value))
				{
					this.OnDirectorAssociationIDChanging(value);
					this.SendPropertyChanging();
					this._DirectorAssociationID = value;
					this.SendPropertyChanged("DirectorAssociationID");
					this.OnDirectorAssociationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityBankID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EntityBankID
		{
			get
			{
				return this._EntityBankID;
			}
			set
			{
				if ((this._EntityBankID != value))
				{
					this.OnEntityBankIDChanging(value);
					this.SendPropertyChanging();
					this._EntityBankID = value;
					this.SendPropertyChanged("EntityBankID");
					this.OnEntityBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POAID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> POAID
		{
			get
			{
				return this._POAID;
			}
			set
			{
				if ((this._POAID != value))
				{
					this.OnPOAIDChanging(value);
					this.SendPropertyChanging();
					this._POAID = value;
					this.SendPropertyChanged("POAID");
					this.OnPOAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AmendedOn
		{
			get
			{
				return this._AmendedOn;
			}
			set
			{
				if ((this._AmendedOn != value))
				{
					this.OnAmendedOnChanging(value);
					this.SendPropertyChanging();
					this._AmendedOn = value;
					this.SendPropertyChanged("AmendedOn");
					this.OnAmendedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendedBy", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string AmendedBy
		{
			get
			{
				return this._AmendedBy;
			}
			set
			{
				if ((this._AmendedBy != value))
				{
					this.OnAmendedByChanging(value);
					this.SendPropertyChanging();
					this._AmendedBy = value;
					this.SendPropertyChanged("AmendedBy");
					this.OnAmendedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFirst", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsFirst
		{
			get
			{
				return this._IsFirst;
			}
			set
			{
				if ((this._IsFirst != value))
				{
					this.OnIsFirstChanging(value);
					this.SendPropertyChanging();
					this._IsFirst = value;
					this.SendPropertyChanged("IsFirst");
					this.OnIsFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Association_Association", Storage="_Associations", ThisKey="AssociationID", OtherKey="ParentID")]
		public EntitySet<Association> Associations
		{
			get
			{
				return this._Associations;
			}
			set
			{
				this._Associations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Association_Association", Storage="_Association1", ThisKey="ParentID", OtherKey="AssociationID", IsForeignKey=true)]
		public Association Association1
		{
			get
			{
				return this._Association1.Entity;
			}
			set
			{
				Association previousValue = this._Association1.Entity;
				if (((previousValue != value) 
							|| (this._Association1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Association1.Entity = null;
						previousValue.Associations.Remove(this);
					}
					this._Association1.Entity = value;
					if ((value != null))
					{
						value.Associations.Add(this);
						this._ParentID = value.AssociationID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Association1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Association", Storage="_Entity", ThisKey="SourceEntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity
		{
			get
			{
				return this._Entity.Entity;
			}
			set
			{
				Entity previousValue = this._Entity.Entity;
				if (((previousValue != value) 
							|| (this._Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity.Entity = null;
						previousValue.Associations.Remove(this);
					}
					this._Entity.Entity = value;
					if ((value != null))
					{
						value.Associations.Add(this);
						this._SourceEntityID = value.EntityID;
					}
					else
					{
						this._SourceEntityID = default(int);
					}
					this.SendPropertyChanged("Entity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Association1", Storage="_Entity1", ThisKey="TargetEntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity1
		{
			get
			{
				return this._Entity1.Entity;
			}
			set
			{
				Entity previousValue = this._Entity1.Entity;
				if (((previousValue != value) 
							|| (this._Entity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity1.Entity = null;
						previousValue.Associations1.Remove(this);
					}
					this._Entity1.Entity = value;
					if ((value != null))
					{
						value.Associations1.Add(this);
						this._TargetEntityID = value.EntityID;
					}
					else
					{
						this._TargetEntityID = default(int);
					}
					this.SendPropertyChanged("Entity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Association1 = this;
		}
		
		private void detach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Association1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityClient")]
	public partial class EntityClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityID;
		
		private string _ShortName;
		
		private string _FullName;
		
		private System.Nullable<int> _JurisdictionID;
		
		private System.Nullable<System.DateTime> _FormationDate;
		
		private System.Nullable<int> _TeamID;
		
		private System.Nullable<bool> _ChargeableFlag;
		
		private System.Nullable<bool> _AdvaloremFlag;
		
		private System.Nullable<decimal> _AdvaloremPercent;
		
		private System.Nullable<decimal> _AdvaloremAmount;
		
		private System.Nullable<System.DateTime> _NextFeeBillingDate;
		
		private System.Nullable<System.DateTime> _LastFeeBillingDate;
		
		private System.Nullable<char> _BillingFrequency;
		
		private string _BillingLedger;
		
		private System.Nullable<bool> _MinFeesFlag;
		
		private System.Nullable<decimal> _MinFeesAmount;
		
		private System.Nullable<bool> _FixedFeeFlag;
		
		private System.Nullable<decimal> _FixedFeeAmount;
		
		private System.Nullable<int> _FeeDetailsID;
		
		private System.Nullable<System.DateTime> _OpenedDate;
		
		private string _OpenedBy;
		
		private System.Nullable<System.DateTime> _AccountsDate;
		
		private System.Nullable<System.DateTime> _TakeOnDate;
		
		private System.Nullable<System.DateTime> _ClosedDate;
		
		private string _ClosedBy;
		
		private string _RegisteredCompanyNum;
		
		private System.Nullable<int> _QuorumShareholders;
		
		private System.Nullable<int> _QuorumDirectors;
		
		private System.Nullable<int> _PurposeID;
		
		private System.Nullable<int> _FoundationCharterID;
		
		private System.Nullable<bool> _RegulationsFlag;
		
		private System.Nullable<int> _RegulationID;
		
		private System.Nullable<System.DateTime> _DeedDate;
		
		private System.Nullable<int> _DeedNameID;
		
		private string _BillingInfo;
		
		private string _TypeOfReturn;
		
		private System.Nullable<System.DateTime> _ReturnSendDate;
		
		private System.Nullable<System.DateTime> _ReturnReminderDate;
		
		private System.Nullable<System.DateTime> _ReturnFiledDate;
		
		private System.Nullable<int> _TaxStatus;
		
		private System.Nullable<System.DateTime> _PerpetuityDate;
		
		private string _PerpetuityPeriod;
		
		private System.Nullable<int> _ProperLawID;
		
		private System.Nullable<System.DateTime> _ProperLawDate;
		
		private System.Nullable<int> _BankNameID;
		
		private string _SortCode;
		
		private string _BIC;
		
		private string _ABANumber;
		
		private string _LocalCode;
		
		private System.Nullable<System.DateTime> _AnnualReturnDate;
		
		private System.Nullable<int> _AssociatedEntityID;
		
		private EntityRef<Entity> _Entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIDChanging(int value);
    partial void OnEntityIDChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnJurisdictionIDChanging(System.Nullable<int> value);
    partial void OnJurisdictionIDChanged();
    partial void OnFormationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFormationDateChanged();
    partial void OnTeamIDChanging(System.Nullable<int> value);
    partial void OnTeamIDChanged();
    partial void OnChargeableFlagChanging(System.Nullable<bool> value);
    partial void OnChargeableFlagChanged();
    partial void OnAdvaloremFlagChanging(System.Nullable<bool> value);
    partial void OnAdvaloremFlagChanged();
    partial void OnAdvaloremPercentChanging(System.Nullable<decimal> value);
    partial void OnAdvaloremPercentChanged();
    partial void OnAdvaloremAmountChanging(System.Nullable<decimal> value);
    partial void OnAdvaloremAmountChanged();
    partial void OnNextFeeBillingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextFeeBillingDateChanged();
    partial void OnLastFeeBillingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastFeeBillingDateChanged();
    partial void OnBillingFrequencyChanging(System.Nullable<char> value);
    partial void OnBillingFrequencyChanged();
    partial void OnBillingLedgerChanging(string value);
    partial void OnBillingLedgerChanged();
    partial void OnMinFeesFlagChanging(System.Nullable<bool> value);
    partial void OnMinFeesFlagChanged();
    partial void OnMinFeesAmountChanging(System.Nullable<decimal> value);
    partial void OnMinFeesAmountChanged();
    partial void OnFixedFeeFlagChanging(System.Nullable<bool> value);
    partial void OnFixedFeeFlagChanged();
    partial void OnFixedFeeAmountChanging(System.Nullable<decimal> value);
    partial void OnFixedFeeAmountChanged();
    partial void OnFeeDetailsIDChanging(System.Nullable<int> value);
    partial void OnFeeDetailsIDChanged();
    partial void OnOpenedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOpenedDateChanged();
    partial void OnOpenedByChanging(string value);
    partial void OnOpenedByChanged();
    partial void OnAccountsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccountsDateChanged();
    partial void OnTakeOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTakeOnDateChanged();
    partial void OnClosedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedDateChanged();
    partial void OnClosedByChanging(string value);
    partial void OnClosedByChanged();
    partial void OnRegisteredCompanyNumChanging(string value);
    partial void OnRegisteredCompanyNumChanged();
    partial void OnQuorumShareholdersChanging(System.Nullable<int> value);
    partial void OnQuorumShareholdersChanged();
    partial void OnQuorumDirectorsChanging(System.Nullable<int> value);
    partial void OnQuorumDirectorsChanged();
    partial void OnPurposeIDChanging(System.Nullable<int> value);
    partial void OnPurposeIDChanged();
    partial void OnFoundationCharterIDChanging(System.Nullable<int> value);
    partial void OnFoundationCharterIDChanged();
    partial void OnRegulationsFlagChanging(System.Nullable<bool> value);
    partial void OnRegulationsFlagChanged();
    partial void OnRegulationIDChanging(System.Nullable<int> value);
    partial void OnRegulationIDChanged();
    partial void OnDeedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeedDateChanged();
    partial void OnDeedNameIDChanging(System.Nullable<int> value);
    partial void OnDeedNameIDChanged();
    partial void OnBillingInfoChanging(string value);
    partial void OnBillingInfoChanged();
    partial void OnTypeOfReturnChanging(string value);
    partial void OnTypeOfReturnChanged();
    partial void OnReturnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnSendDateChanged();
    partial void OnReturnReminderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnReminderDateChanged();
    partial void OnReturnFiledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnFiledDateChanged();
    partial void OnTaxStatusChanging(System.Nullable<int> value);
    partial void OnTaxStatusChanged();
    partial void OnPerpetuityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPerpetuityDateChanged();
    partial void OnPerpetuityPeriodChanging(string value);
    partial void OnPerpetuityPeriodChanged();
    partial void OnProperLawIDChanging(System.Nullable<int> value);
    partial void OnProperLawIDChanged();
    partial void OnProperLawDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProperLawDateChanged();
    partial void OnBankNameIDChanging(System.Nullable<int> value);
    partial void OnBankNameIDChanged();
    partial void OnSortCodeChanging(string value);
    partial void OnSortCodeChanged();
    partial void OnBICChanging(string value);
    partial void OnBICChanged();
    partial void OnABANumberChanging(string value);
    partial void OnABANumberChanged();
    partial void OnLocalCodeChanging(string value);
    partial void OnLocalCodeChanged();
    partial void OnAnnualReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAnnualReturnDateChanged();
    partial void OnAssociatedEntityIDChanging(System.Nullable<int> value);
    partial void OnAssociatedEntityIDChanged();
    #endregion
		
		public EntityClient()
		{
			this._Entity = default(EntityRef<Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					if (this._Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurisdictionID", DbType="Int")]
		public System.Nullable<int> JurisdictionID
		{
			get
			{
				return this._JurisdictionID;
			}
			set
			{
				if ((this._JurisdictionID != value))
				{
					this.OnJurisdictionIDChanging(value);
					this.SendPropertyChanging();
					this._JurisdictionID = value;
					this.SendPropertyChanged("JurisdictionID");
					this.OnJurisdictionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FormationDate
		{
			get
			{
				return this._FormationDate;
			}
			set
			{
				if ((this._FormationDate != value))
				{
					this.OnFormationDateChanging(value);
					this.SendPropertyChanging();
					this._FormationDate = value;
					this.SendPropertyChanged("FormationDate");
					this.OnFormationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int")]
		public System.Nullable<int> TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeableFlag", DbType="Bit")]
		public System.Nullable<bool> ChargeableFlag
		{
			get
			{
				return this._ChargeableFlag;
			}
			set
			{
				if ((this._ChargeableFlag != value))
				{
					this.OnChargeableFlagChanging(value);
					this.SendPropertyChanging();
					this._ChargeableFlag = value;
					this.SendPropertyChanged("ChargeableFlag");
					this.OnChargeableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvaloremFlag", DbType="Bit")]
		public System.Nullable<bool> AdvaloremFlag
		{
			get
			{
				return this._AdvaloremFlag;
			}
			set
			{
				if ((this._AdvaloremFlag != value))
				{
					this.OnAdvaloremFlagChanging(value);
					this.SendPropertyChanging();
					this._AdvaloremFlag = value;
					this.SendPropertyChanged("AdvaloremFlag");
					this.OnAdvaloremFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvaloremPercent", DbType="SmallMoney")]
		public System.Nullable<decimal> AdvaloremPercent
		{
			get
			{
				return this._AdvaloremPercent;
			}
			set
			{
				if ((this._AdvaloremPercent != value))
				{
					this.OnAdvaloremPercentChanging(value);
					this.SendPropertyChanging();
					this._AdvaloremPercent = value;
					this.SendPropertyChanged("AdvaloremPercent");
					this.OnAdvaloremPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvaloremAmount", DbType="Money")]
		public System.Nullable<decimal> AdvaloremAmount
		{
			get
			{
				return this._AdvaloremAmount;
			}
			set
			{
				if ((this._AdvaloremAmount != value))
				{
					this.OnAdvaloremAmountChanging(value);
					this.SendPropertyChanging();
					this._AdvaloremAmount = value;
					this.SendPropertyChanged("AdvaloremAmount");
					this.OnAdvaloremAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextFeeBillingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextFeeBillingDate
		{
			get
			{
				return this._NextFeeBillingDate;
			}
			set
			{
				if ((this._NextFeeBillingDate != value))
				{
					this.OnNextFeeBillingDateChanging(value);
					this.SendPropertyChanging();
					this._NextFeeBillingDate = value;
					this.SendPropertyChanged("NextFeeBillingDate");
					this.OnNextFeeBillingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFeeBillingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastFeeBillingDate
		{
			get
			{
				return this._LastFeeBillingDate;
			}
			set
			{
				if ((this._LastFeeBillingDate != value))
				{
					this.OnLastFeeBillingDateChanging(value);
					this.SendPropertyChanging();
					this._LastFeeBillingDate = value;
					this.SendPropertyChanged("LastFeeBillingDate");
					this.OnLastFeeBillingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingFrequency", DbType="Char(1)")]
		public System.Nullable<char> BillingFrequency
		{
			get
			{
				return this._BillingFrequency;
			}
			set
			{
				if ((this._BillingFrequency != value))
				{
					this.OnBillingFrequencyChanging(value);
					this.SendPropertyChanging();
					this._BillingFrequency = value;
					this.SendPropertyChanged("BillingFrequency");
					this.OnBillingFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingLedger", DbType="VarChar(50)")]
		public string BillingLedger
		{
			get
			{
				return this._BillingLedger;
			}
			set
			{
				if ((this._BillingLedger != value))
				{
					this.OnBillingLedgerChanging(value);
					this.SendPropertyChanging();
					this._BillingLedger = value;
					this.SendPropertyChanged("BillingLedger");
					this.OnBillingLedgerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinFeesFlag", DbType="Bit")]
		public System.Nullable<bool> MinFeesFlag
		{
			get
			{
				return this._MinFeesFlag;
			}
			set
			{
				if ((this._MinFeesFlag != value))
				{
					this.OnMinFeesFlagChanging(value);
					this.SendPropertyChanging();
					this._MinFeesFlag = value;
					this.SendPropertyChanged("MinFeesFlag");
					this.OnMinFeesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinFeesAmount", DbType="Money")]
		public System.Nullable<decimal> MinFeesAmount
		{
			get
			{
				return this._MinFeesAmount;
			}
			set
			{
				if ((this._MinFeesAmount != value))
				{
					this.OnMinFeesAmountChanging(value);
					this.SendPropertyChanging();
					this._MinFeesAmount = value;
					this.SendPropertyChanged("MinFeesAmount");
					this.OnMinFeesAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedFeeFlag", DbType="Bit")]
		public System.Nullable<bool> FixedFeeFlag
		{
			get
			{
				return this._FixedFeeFlag;
			}
			set
			{
				if ((this._FixedFeeFlag != value))
				{
					this.OnFixedFeeFlagChanging(value);
					this.SendPropertyChanging();
					this._FixedFeeFlag = value;
					this.SendPropertyChanged("FixedFeeFlag");
					this.OnFixedFeeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedFeeAmount", DbType="Money")]
		public System.Nullable<decimal> FixedFeeAmount
		{
			get
			{
				return this._FixedFeeAmount;
			}
			set
			{
				if ((this._FixedFeeAmount != value))
				{
					this.OnFixedFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FixedFeeAmount = value;
					this.SendPropertyChanged("FixedFeeAmount");
					this.OnFixedFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeDetailsID", DbType="Int")]
		public System.Nullable<int> FeeDetailsID
		{
			get
			{
				return this._FeeDetailsID;
			}
			set
			{
				if ((this._FeeDetailsID != value))
				{
					this.OnFeeDetailsIDChanging(value);
					this.SendPropertyChanging();
					this._FeeDetailsID = value;
					this.SendPropertyChanged("FeeDetailsID");
					this.OnFeeDetailsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OpenedDate
		{
			get
			{
				return this._OpenedDate;
			}
			set
			{
				if ((this._OpenedDate != value))
				{
					this.OnOpenedDateChanging(value);
					this.SendPropertyChanging();
					this._OpenedDate = value;
					this.SendPropertyChanged("OpenedDate");
					this.OnOpenedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenedBy", DbType="VarChar(30)")]
		public string OpenedBy
		{
			get
			{
				return this._OpenedBy;
			}
			set
			{
				if ((this._OpenedBy != value))
				{
					this.OnOpenedByChanging(value);
					this.SendPropertyChanging();
					this._OpenedBy = value;
					this.SendPropertyChanged("OpenedBy");
					this.OnOpenedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccountsDate
		{
			get
			{
				return this._AccountsDate;
			}
			set
			{
				if ((this._AccountsDate != value))
				{
					this.OnAccountsDateChanging(value);
					this.SendPropertyChanging();
					this._AccountsDate = value;
					this.SendPropertyChanged("AccountsDate");
					this.OnAccountsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakeOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TakeOnDate
		{
			get
			{
				return this._TakeOnDate;
			}
			set
			{
				if ((this._TakeOnDate != value))
				{
					this.OnTakeOnDateChanging(value);
					this.SendPropertyChanging();
					this._TakeOnDate = value;
					this.SendPropertyChanged("TakeOnDate");
					this.OnTakeOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosedDate
		{
			get
			{
				return this._ClosedDate;
			}
			set
			{
				if ((this._ClosedDate != value))
				{
					this.OnClosedDateChanging(value);
					this.SendPropertyChanging();
					this._ClosedDate = value;
					this.SendPropertyChanged("ClosedDate");
					this.OnClosedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedBy", DbType="VarChar(30)")]
		public string ClosedBy
		{
			get
			{
				return this._ClosedBy;
			}
			set
			{
				if ((this._ClosedBy != value))
				{
					this.OnClosedByChanging(value);
					this.SendPropertyChanging();
					this._ClosedBy = value;
					this.SendPropertyChanged("ClosedBy");
					this.OnClosedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisteredCompanyNum", DbType="VarChar(20)")]
		public string RegisteredCompanyNum
		{
			get
			{
				return this._RegisteredCompanyNum;
			}
			set
			{
				if ((this._RegisteredCompanyNum != value))
				{
					this.OnRegisteredCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._RegisteredCompanyNum = value;
					this.SendPropertyChanged("RegisteredCompanyNum");
					this.OnRegisteredCompanyNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuorumShareholders", DbType="Int")]
		public System.Nullable<int> QuorumShareholders
		{
			get
			{
				return this._QuorumShareholders;
			}
			set
			{
				if ((this._QuorumShareholders != value))
				{
					this.OnQuorumShareholdersChanging(value);
					this.SendPropertyChanging();
					this._QuorumShareholders = value;
					this.SendPropertyChanged("QuorumShareholders");
					this.OnQuorumShareholdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuorumDirectors", DbType="Int")]
		public System.Nullable<int> QuorumDirectors
		{
			get
			{
				return this._QuorumDirectors;
			}
			set
			{
				if ((this._QuorumDirectors != value))
				{
					this.OnQuorumDirectorsChanging(value);
					this.SendPropertyChanging();
					this._QuorumDirectors = value;
					this.SendPropertyChanged("QuorumDirectors");
					this.OnQuorumDirectorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeID", DbType="Int")]
		public System.Nullable<int> PurposeID
		{
			get
			{
				return this._PurposeID;
			}
			set
			{
				if ((this._PurposeID != value))
				{
					this.OnPurposeIDChanging(value);
					this.SendPropertyChanging();
					this._PurposeID = value;
					this.SendPropertyChanged("PurposeID");
					this.OnPurposeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoundationCharterID", DbType="Int")]
		public System.Nullable<int> FoundationCharterID
		{
			get
			{
				return this._FoundationCharterID;
			}
			set
			{
				if ((this._FoundationCharterID != value))
				{
					this.OnFoundationCharterIDChanging(value);
					this.SendPropertyChanging();
					this._FoundationCharterID = value;
					this.SendPropertyChanged("FoundationCharterID");
					this.OnFoundationCharterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulationsFlag", DbType="Bit")]
		public System.Nullable<bool> RegulationsFlag
		{
			get
			{
				return this._RegulationsFlag;
			}
			set
			{
				if ((this._RegulationsFlag != value))
				{
					this.OnRegulationsFlagChanging(value);
					this.SendPropertyChanging();
					this._RegulationsFlag = value;
					this.SendPropertyChanged("RegulationsFlag");
					this.OnRegulationsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulationID", DbType="Int")]
		public System.Nullable<int> RegulationID
		{
			get
			{
				return this._RegulationID;
			}
			set
			{
				if ((this._RegulationID != value))
				{
					this.OnRegulationIDChanging(value);
					this.SendPropertyChanging();
					this._RegulationID = value;
					this.SendPropertyChanged("RegulationID");
					this.OnRegulationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeedDate
		{
			get
			{
				return this._DeedDate;
			}
			set
			{
				if ((this._DeedDate != value))
				{
					this.OnDeedDateChanging(value);
					this.SendPropertyChanging();
					this._DeedDate = value;
					this.SendPropertyChanged("DeedDate");
					this.OnDeedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeedNameID", DbType="Int")]
		public System.Nullable<int> DeedNameID
		{
			get
			{
				return this._DeedNameID;
			}
			set
			{
				if ((this._DeedNameID != value))
				{
					this.OnDeedNameIDChanging(value);
					this.SendPropertyChanging();
					this._DeedNameID = value;
					this.SendPropertyChanged("DeedNameID");
					this.OnDeedNameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingInfo", DbType="VarChar(100)")]
		public string BillingInfo
		{
			get
			{
				return this._BillingInfo;
			}
			set
			{
				if ((this._BillingInfo != value))
				{
					this.OnBillingInfoChanging(value);
					this.SendPropertyChanging();
					this._BillingInfo = value;
					this.SendPropertyChanged("BillingInfo");
					this.OnBillingInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfReturn", DbType="VarChar(50)")]
		public string TypeOfReturn
		{
			get
			{
				return this._TypeOfReturn;
			}
			set
			{
				if ((this._TypeOfReturn != value))
				{
					this.OnTypeOfReturnChanging(value);
					this.SendPropertyChanging();
					this._TypeOfReturn = value;
					this.SendPropertyChanged("TypeOfReturn");
					this.OnTypeOfReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnSendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnSendDate
		{
			get
			{
				return this._ReturnSendDate;
			}
			set
			{
				if ((this._ReturnSendDate != value))
				{
					this.OnReturnSendDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnSendDate = value;
					this.SendPropertyChanged("ReturnSendDate");
					this.OnReturnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnReminderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnReminderDate
		{
			get
			{
				return this._ReturnReminderDate;
			}
			set
			{
				if ((this._ReturnReminderDate != value))
				{
					this.OnReturnReminderDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnReminderDate = value;
					this.SendPropertyChanged("ReturnReminderDate");
					this.OnReturnReminderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnFiledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnFiledDate
		{
			get
			{
				return this._ReturnFiledDate;
			}
			set
			{
				if ((this._ReturnFiledDate != value))
				{
					this.OnReturnFiledDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnFiledDate = value;
					this.SendPropertyChanged("ReturnFiledDate");
					this.OnReturnFiledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxStatus", DbType="Int")]
		public System.Nullable<int> TaxStatus
		{
			get
			{
				return this._TaxStatus;
			}
			set
			{
				if ((this._TaxStatus != value))
				{
					this.OnTaxStatusChanging(value);
					this.SendPropertyChanging();
					this._TaxStatus = value;
					this.SendPropertyChanged("TaxStatus");
					this.OnTaxStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerpetuityDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PerpetuityDate
		{
			get
			{
				return this._PerpetuityDate;
			}
			set
			{
				if ((this._PerpetuityDate != value))
				{
					this.OnPerpetuityDateChanging(value);
					this.SendPropertyChanging();
					this._PerpetuityDate = value;
					this.SendPropertyChanged("PerpetuityDate");
					this.OnPerpetuityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerpetuityPeriod", DbType="VarChar(50)")]
		public string PerpetuityPeriod
		{
			get
			{
				return this._PerpetuityPeriod;
			}
			set
			{
				if ((this._PerpetuityPeriod != value))
				{
					this.OnPerpetuityPeriodChanging(value);
					this.SendPropertyChanging();
					this._PerpetuityPeriod = value;
					this.SendPropertyChanged("PerpetuityPeriod");
					this.OnPerpetuityPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProperLawID", DbType="Int")]
		public System.Nullable<int> ProperLawID
		{
			get
			{
				return this._ProperLawID;
			}
			set
			{
				if ((this._ProperLawID != value))
				{
					this.OnProperLawIDChanging(value);
					this.SendPropertyChanging();
					this._ProperLawID = value;
					this.SendPropertyChanged("ProperLawID");
					this.OnProperLawIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProperLawDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProperLawDate
		{
			get
			{
				return this._ProperLawDate;
			}
			set
			{
				if ((this._ProperLawDate != value))
				{
					this.OnProperLawDateChanging(value);
					this.SendPropertyChanging();
					this._ProperLawDate = value;
					this.SendPropertyChanged("ProperLawDate");
					this.OnProperLawDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankNameID", DbType="Int")]
		public System.Nullable<int> BankNameID
		{
			get
			{
				return this._BankNameID;
			}
			set
			{
				if ((this._BankNameID != value))
				{
					this.OnBankNameIDChanging(value);
					this.SendPropertyChanging();
					this._BankNameID = value;
					this.SendPropertyChanged("BankNameID");
					this.OnBankNameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCode", DbType="VarChar(6)")]
		public string SortCode
		{
			get
			{
				return this._SortCode;
			}
			set
			{
				if ((this._SortCode != value))
				{
					this.OnSortCodeChanging(value);
					this.SendPropertyChanging();
					this._SortCode = value;
					this.SendPropertyChanged("SortCode");
					this.OnSortCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIC", DbType="VarChar(11)")]
		public string BIC
		{
			get
			{
				return this._BIC;
			}
			set
			{
				if ((this._BIC != value))
				{
					this.OnBICChanging(value);
					this.SendPropertyChanging();
					this._BIC = value;
					this.SendPropertyChanged("BIC");
					this.OnBICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABANumber", DbType="VarChar(9)")]
		public string ABANumber
		{
			get
			{
				return this._ABANumber;
			}
			set
			{
				if ((this._ABANumber != value))
				{
					this.OnABANumberChanging(value);
					this.SendPropertyChanging();
					this._ABANumber = value;
					this.SendPropertyChanged("ABANumber");
					this.OnABANumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalCode", DbType="VarChar(50)")]
		public string LocalCode
		{
			get
			{
				return this._LocalCode;
			}
			set
			{
				if ((this._LocalCode != value))
				{
					this.OnLocalCodeChanging(value);
					this.SendPropertyChanging();
					this._LocalCode = value;
					this.SendPropertyChanged("LocalCode");
					this.OnLocalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualReturnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AnnualReturnDate
		{
			get
			{
				return this._AnnualReturnDate;
			}
			set
			{
				if ((this._AnnualReturnDate != value))
				{
					this.OnAnnualReturnDateChanging(value);
					this.SendPropertyChanging();
					this._AnnualReturnDate = value;
					this.SendPropertyChanged("AnnualReturnDate");
					this.OnAnnualReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociatedEntityID", DbType="Int")]
		public System.Nullable<int> AssociatedEntityID
		{
			get
			{
				return this._AssociatedEntityID;
			}
			set
			{
				if ((this._AssociatedEntityID != value))
				{
					this.OnAssociatedEntityIDChanging(value);
					this.SendPropertyChanging();
					this._AssociatedEntityID = value;
					this.SendPropertyChanged("AssociatedEntityID");
					this.OnAssociatedEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityClient", Storage="_Entity", ThisKey="EntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity
		{
			get
			{
				return this._Entity.Entity;
			}
			set
			{
				Entity previousValue = this._Entity.Entity;
				if (((previousValue != value) 
							|| (this._Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity.Entity = null;
						previousValue.EntityClient = null;
					}
					this._Entity.Entity = value;
					if ((value != null))
					{
						value.EntityClient = this;
						this._EntityID = value.EntityID;
					}
					else
					{
						this._EntityID = default(int);
					}
					this.SendPropertyChanged("Entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityRoles")]
	public partial class EntityRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityRolesID;
		
		private int _EntityID;
		
		private int _RoleTypeID;
		
		private EntityRef<Entity> _Entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityRolesIDChanging(int value);
    partial void OnEntityRolesIDChanged();
    partial void OnEntityIDChanging(int value);
    partial void OnEntityIDChanged();
    partial void OnRoleTypeIDChanging(int value);
    partial void OnRoleTypeIDChanged();
    #endregion
		
		public EntityRole()
		{
			this._Entity = default(EntityRef<Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityRolesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntityRolesID
		{
			get
			{
				return this._EntityRolesID;
			}
			set
			{
				if ((this._EntityRolesID != value))
				{
					this.OnEntityRolesIDChanging(value);
					this.SendPropertyChanging();
					this._EntityRolesID = value;
					this.SendPropertyChanged("EntityRolesID");
					this.OnEntityRolesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="Int NOT NULL")]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					if (this._Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTypeID", DbType="Int NOT NULL")]
		public int RoleTypeID
		{
			get
			{
				return this._RoleTypeID;
			}
			set
			{
				if ((this._RoleTypeID != value))
				{
					this.OnRoleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RoleTypeID = value;
					this.SendPropertyChanged("RoleTypeID");
					this.OnRoleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityRole", Storage="_Entity", ThisKey="EntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity
		{
			get
			{
				return this._Entity.Entity;
			}
			set
			{
				Entity previousValue = this._Entity.Entity;
				if (((previousValue != value) 
							|| (this._Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity.Entity = null;
						previousValue.EntityRoles.Remove(this);
					}
					this._Entity.Entity = value;
					if ((value != null))
					{
						value.EntityRoles.Add(this);
						this._EntityID = value.EntityID;
					}
					else
					{
						this._EntityID = default(int);
					}
					this.SendPropertyChanged("Entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
